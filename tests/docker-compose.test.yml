version: '3.8'

services:
  # Mock Kubernetes API server
  mock-kubernetes:
    image: nginx:alpine
    container_name: mock-k8s-api
    volumes:
      - ./mock-services/k8s:/usr/share/nginx/html:ro
      - ./mock-services/nginx-k8s.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8001:80"
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost/healthz"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Mock GitHub API server
  mock-github:
    image: nginx:alpine
    container_name: mock-github-api
    volumes:
      - ./mock-services/github:/usr/share/nginx/html:ro
      - ./mock-services/nginx-github.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8002:80"
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost/healthz"]
      interval: 5s
      timeout: 3s
      retries: 5

  # On-call Agent Test Container
  oncall-test:
    build:
      context: ../backend
      dockerfile: ../tests/Dockerfile.test
    container_name: oncall-integration-test
    environment:
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - NOTION_TOKEN=${NOTION_TOKEN}
      - NOTION_DATABASE_ID=${NOTION_DATABASE_ID}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - KUBERNETES_API_SERVER=http://mock-kubernetes
      - GITHUB_API_BASE_URL=http://mock-github
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - USE_MOCK_SERVICES=true
    depends_on:
      mock-kubernetes:
        condition: service_healthy
      mock-github:
        condition: service_healthy
    networks:
      - test-network
    volumes:
      - ../backend:/app:ro
      - ../.env:/app/.env:ro
      - ./test-results:/app/test-results
    command: python test_docker_integration.py

networks:
  test-network:
    driver: bridge