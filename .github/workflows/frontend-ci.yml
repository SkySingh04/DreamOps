name: Frontend CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'frontend/**'

env:
  AWS_REGION: ap-south-1
  AMPLIFY_APP_ID: ${{ secrets.AMPLIFY_APP_ID }}
  AMPLIFY_BRANCH: main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run linter
        run: pnpm lint
        continue-on-error: true

      - name: Run type check
        run: pnpm type-check
        continue-on-error: true

      - name: Run tests
        run: pnpm test
        continue-on-error: true  # Allow to continue if no tests are set up yet

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: test
    if: always() && github.ref == 'refs/heads/main' && github.event_name == 'push'
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to AWS Amplify
        run: |
          # Create deployment
          JOB_ID=$(aws amplify start-deployment \
            --app-id ${{ env.AMPLIFY_APP_ID }} \
            --branch-name ${{ env.AMPLIFY_BRANCH }} \
            --query 'jobSummary.jobId' \
            --output text)
          
          echo "Deployment started with Job ID: $JOB_ID"
          
          # Wait for deployment to complete
          while true; do
            STATUS=$(aws amplify get-job \
              --app-id ${{ env.AMPLIFY_APP_ID }} \
              --branch-name ${{ env.AMPLIFY_BRANCH }} \
              --job-id $JOB_ID \
              --query 'job.summary.status' \
              --output text)
            
            echo "Deployment status: $STATUS"
            
            if [ "$STATUS" = "SUCCEED" ]; then
              echo "‚úÖ Deployment successful!"
              break
            elif [ "$STATUS" = "FAILED" ] || [ "$STATUS" = "CANCELLED" ]; then
              echo "‚ùå Deployment failed with status: $STATUS"
              exit 1
            fi
            
            sleep 30
          done

      - name: Get Amplify App URL
        run: |
          APP_URL=$(aws amplify get-app \
            --app-id ${{ env.AMPLIFY_APP_ID }} \
            --query 'app.defaultDomain' \
            --output text)
          echo "üåê Access your app at: https://${{ env.AMPLIFY_BRANCH }}.$APP_URL"