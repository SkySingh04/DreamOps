# DreamOps Staging Environment
# Copy this to .env.staging and update with your Neon staging connection string

# Database (Neon Staging)
DATABASE_URL=postgresql://username:password@ep-staging-darkness-123456.us-east-2.aws.neon.tech/oncall_agent?sslmode=require

# Core Configuration
ANTHROPIC_API_KEY=your-anthropic-api-key
CLAUDE_MODEL=claude-3-5-sonnet-20241022
LOG_LEVEL=INFO
ENVIRONMENT=staging

# API Server
API_HOST=0.0.0.0
API_PORT=8000
API_RELOAD=false
CORS_ORIGINS=["https://staging.yourdomain.com","https://api-staging.yourdomain.com"]

# PagerDuty Integration
PAGERDUTY_ENABLED=true
PAGERDUTY_WEBHOOK_SECRET=${PAGERDUTY_WEBHOOK_SECRET_STAGING}
PAGERDUTY_API_KEY=${PAGERDUTY_API_KEY_STAGING}
PAGERDUTY_ROUTING_KEY=${PAGERDUTY_ROUTING_KEY_STAGING}

# Kubernetes Integration
K8S_ENABLED=true
K8S_CONFIG_PATH=/etc/kubeconfig/config
K8S_CONTEXT=staging-cluster
K8S_NAMESPACE=oncall-staging
K8S_ENABLE_DESTRUCTIVE_OPERATIONS=false

# GitHub Integration
GITHUB_TOKEN=${GITHUB_TOKEN_STAGING}
GITHUB_MCP_SERVER_PATH=/usr/local/bin/github-mcp-server
GITHUB_MCP_SERVER_HOST=localhost
GITHUB_MCP_SERVER_PORT=8081

# Grafana Integration
GRAFANA_URL=https://grafana-staging.yourdomain.com
GRAFANA_API_KEY=${GRAFANA_API_KEY_STAGING}

# MCP Settings
MCP_MAX_RETRIES=3
MCP_TIMEOUT_SECONDS=30